on: [push, pull_request]

name: Continuous integration

jobs:
  Nightly:
    name: Nightly - ASan + Bench + Docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Install clang for ASan
        run: sudo apt-get install -y clang
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rust-src
      - name: Running address sanitizer
        env:
          DO_ASAN: true
        run: ./contrib/test.sh
      - name: Building docs
        env:
          DO_DOCS: true
        run: ./contrib/test.sh

  Tests:
    name: Tests
    strategy:
      matrix:
        rust:
          - 1.56.1
          - beta
          - stable
        os: [ ubuntu-latest, macos-latest ]
        exclude:
          - rust: 1.56.1
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: rustfmt on stable
        if: matrix.rust == 'stable'
        env:
          DO_LINT: true
        run: ./contrib/test.sh
      - name: Running cargo
        env:
          DO_FEATURE_MATRIX: true
        run: ./contrib/test.sh

  WASM:
    name: WASM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly] # No 1.29 because WASM requires Rust 1.30
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Install clang
        run: sudo apt-get install -y clang
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: rust-src
      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Running WASM tests
        env:
          DO_WASM: true
        run: ./contrib/test.sh

  ReleaseTests:
    name: Release tests with global context enabled
    strategy:
      matrix:
        rust:
          - 1.56.1
          - beta
          - stable
        os: [ ubuntu-latest, macos-latest ]
        exclude:
          - rust: 1.56.1
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Crate
        uses: actions/checkout@v2
      - name: Checkout Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Running cargo in release mode
        run: cargo test --features="global-context" --release
